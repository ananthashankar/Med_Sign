/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.Appointment;
import Business.Business;
import Business.DB4OUtil;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.time.Month;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author AnanthaShankar
 */
public class AddScheduleJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddScheduleJPanel
     */
    private JPanel upc;
    private Business b;
    private DB4OUtil dbo4;

    public AddScheduleJPanel(JPanel upc, Business b, DB4OUtil dbo4) {
        initComponents();
        this.upc = upc;
        this.b = b;
        this.dbo4 = dbo4;
        tmJCmbBx.removeAllItems();
        tmJCmbBx.addItem("6:30 PM");
        tmJCmbBx.addItem("7:00 PM");
        tmJCmbBx.addItem("7:30 PM");
        tmJCmbBx.addItem("8:00 PM");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        dtJTxtField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tmJCmbBx = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        addSchdJBtn = new javax.swing.JButton();
        backJBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setText("Date");

        dtJTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dtJTxtFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Time");

        tmJCmbBx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tmJCmbBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmJCmbBxActionPerformed(evt);
            }
        });

        jLabel3.setText("(Eg. \"11/22/2014\" \"MM/DD/YYYY\")");

        addSchdJBtn.setText("Add Schedule");
        addSchdJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSchdJBtnActionPerformed(evt);
            }
        });

        backJBtn.setText("<<  Back");
        backJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Add Schedule Window");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJBtn)))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addSchdJBtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dtJTxtField)
                            .addComponent(tmJCmbBx, 0, 110, Short.MAX_VALUE))
                        .addGap(37, 37, 37)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(dtJTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tmJCmbBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSchdJBtn)
                    .addComponent(backJBtn))
                .addContainerGap(145, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dtJTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dtJTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dtJTxtFieldActionPerformed

    private void backJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJBtnActionPerformed
        // TODO add your handling code here:
        upc.remove(this);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
    }//GEN-LAST:event_backJBtnActionPerformed

    private void addSchdJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSchdJBtnActionPerformed
        // TODO add your handling code here:
        String dt;
        Date date;
        SimpleDateFormat sf = new SimpleDateFormat("MM-dd-yyyy");
        date = Calendar.getInstance().getTime();
        dt = sf.format(date);
        int flag = 0;
        String enteredDate = null;
        int today_year = 0;
        int today_date = 0;
        int today_month = 0;
        int entered_year = 0;
        int entered_date = 0;
        int entered_month = 0;
        String numF = "[0-9]+";

        if (dtJTxtField.getText().trim().length() == 10) {
            enteredDate = dtJTxtField.getText().trim();
            if (enteredDate.substring(6).matches(numF) || enteredDate.substring(0, 2).matches(numF)
                    || enteredDate.substring(3, 5).matches(numF)) {
                today_year = Integer.parseInt(dt.substring(6));
                today_date = Integer.parseInt(dt.substring(3, 5));
                today_month = Integer.parseInt(dt.substring(0, 2));
                entered_year = Integer.parseInt(enteredDate.substring(6));
                entered_month = Integer.parseInt(enteredDate.substring(0, 2));
                entered_date = Integer.parseInt(enteredDate.substring(3, 5));
                flag = 1;
            } else {
                JOptionPane.showMessageDialog(null, "Please enter a valid date with specified format mm/dd/yyyy - Junk Values not allowed");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please enter a valid date with specified format mm/dd/yyyy.");
        }
        if (flag == 1) {

            if (today_year <= entered_year) {
                if (today_year == entered_year) {
                    if (today_month <= entered_month) {
                        if (today_month == entered_month) {
                            if (entered_date >= today_date) {
                                if (entered_month == 1 || entered_month == 3 || entered_month == 5
                                        || entered_month == 7 || entered_month == 8 || entered_month == 10
                                        || entered_month == 12) {
                                    if (entered_date <= 31 && entered_date >= 1) {
                                        flag = 1;
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                        flag = 0;
                                    }
                                } else if (entered_month == 4 || entered_month == 6 || entered_month == 9
                                        || entered_month == 11) {
                                    if (entered_date <= 30 && entered_date >= 1) {
                                        flag = 1;
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                        flag = 0;
                                    }
                                } else if (entered_month == 2) {
                                    if (entered_year % 4 == 0) {
                                        if (entered_year % 100 == 0) {
                                            if (entered_year % 400 == 0) {
                                                if (entered_date <= 29 && entered_date >= 1) {
                                                    flag = 1;
                                                } else {
                                                    JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                                    flag = 0;
                                                }
                                            } else {
                                                if (entered_date <= 28 && entered_date >= 1) {
                                                    flag = 1;
                                                } else {
                                                    JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                                    flag = 0;
                                                }
                                            }
                                        } else {
                                            if (entered_date <= 29 && entered_date >= 1) {
                                                flag = 1;
                                            } else {
                                                JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                                flag = 0;
                                            }
                                        }
                                    } else if (entered_date <= 28 && entered_date >= 1) {
                                        flag = 1;
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                        flag = 0;
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Month Value.");
                                    flag = 0;
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Please enter a valid date - Old Date Value.");
                                flag = 0;
                            }
                        } else if (entered_month == 1 || entered_month == 3 || entered_month == 5
                                || entered_month == 7 || entered_month == 8 || entered_month == 10
                                || entered_month == 12) {
                            if (entered_date <= 31 && entered_date >= 1) {
                                flag = 1;
                            } else {
                                JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                flag = 0;
                            }
                        } else if (entered_month == 4 || entered_month == 6 || entered_month == 9
                                || entered_month == 11) {
                            if (entered_date <= 30 && entered_date >= 1) {
                                flag = 1;
                            } else {
                                JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                flag = 0;
                            }
                        } else if (entered_month == 2) {
                            if (entered_year % 4 == 0) {
                                if (entered_year % 100 == 0) {
                                    if (entered_year % 400 == 0) {
                                        if (entered_date <= 29 && entered_date >= 1) {
                                            flag = 1;
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                            flag = 0;
                                        }
                                    } else {
                                        if (entered_date <= 28 && entered_date >= 1) {
                                            flag = 1;
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                            flag = 0;
                                        }
                                    }
                                } else {
                                    if (entered_date <= 29 && entered_date >= 1) {
                                        flag = 1;
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                        flag = 0;
                                    }
                                }
                            } else if (entered_date <= 28 && entered_date >= 1) {
                                flag = 1;
                            } else {
                                JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                flag = 0;
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Month Value.");
                            flag = 0;
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Month Value.");
                        flag = 0;
                    }
                } else {
                    if (entered_month >= 1 && entered_month <= 12) {
                        if (entered_month == 1 || entered_month == 3 || entered_month == 5
                                || entered_month == 7 || entered_month == 8 || entered_month == 10
                                || entered_month == 12) {
                            if (entered_date <= 31 && entered_date >= 1) {
                                flag = 1;
                            } else {
                                JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                flag = 0;
                            }
                        } else if (entered_month == 4 || entered_month == 6 || entered_month == 9
                                || entered_month == 11) {
                            if (entered_date <= 30 && entered_date >= 1) {
                                flag = 1;
                            } else {
                                JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                flag = 0;
                            }
                        } else if (entered_month == 2) {
                            if (entered_year % 4 == 0) {
                                if (entered_year % 100 == 0) {
                                    if (entered_year % 400 == 0) {
                                        if (entered_date <= 29 && entered_date >= 1) {
                                            flag = 1;
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                            flag = 0;
                                        }
                                    } else {
                                        if (entered_date <= 28 && entered_date >= 1) {
                                            flag = 1;
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                            flag = 0;
                                        }
                                    }
                                } else {
                                    if (entered_date <= 29 && entered_date >= 1) {
                                        flag = 1;
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                        flag = 0;
                                    }
                                }
                            } else if (entered_date <= 28 && entered_date >= 1) {
                                flag = 1;
                            } else {
                                JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Date Value.");
                                flag = 0;
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Month Value.");
                            flag = 0;
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Month Value.");
                        flag = 0;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter a valid date - Invalid Year Value.");
                flag = 0;
            }
        }

        if (flag == 1) {
            if (enteredDate.substring(2, 3).equals("/") && enteredDate.substring(5, 6).equals("/")) {
                String schd = enteredDate + " " + (String) tmJCmbBx.getSelectedItem();
                for (String s : b.getAptHist().getAvailableAppointments()) {
                    if (s.equalsIgnoreCase(schd)) {
                        JOptionPane.showMessageDialog(null, "Schedule Already Exists for Entered Value. Please add for some other date and time value.");
                        flag = 0;
                        break;
                    }
                }
                for (Appointment a : b.getAptHist().getAppointmentList()) {
                    if (a.getAppointmentDate().equalsIgnoreCase(schd)) {
                        JOptionPane.showMessageDialog(null, "Appointment Already Exists for Entered Value. Please add for some other date and time value.");
                        flag = 0;
                        break;
                    }
                }
                if (flag == 1) {
                    b.getAptHist().addScheduleToScheduleDb(schd);
                    dbo4.storeSystem(b);
                    JOptionPane.showMessageDialog(null, "Schedule Added Successfully.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please enter date with / as delimiter.");
            }
        }

    }//GEN-LAST:event_addSchdJBtnActionPerformed

    private void tmJCmbBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmJCmbBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tmJCmbBxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSchdJBtn;
    private javax.swing.JButton backJBtn;
    private javax.swing.JTextField dtJTxtField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox tmJCmbBx;
    // End of variables declaration//GEN-END:variables
}
